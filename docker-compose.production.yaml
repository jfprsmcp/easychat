version: '3'

services:
  base: &base
    image: jodete3430381/base:1.0.0
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        RAILS_ENV: 'production'
        RAILS_SERVE_STATIC_FILES: true
    env_file: .env ## Change this file for customized env variables
    volumes:
      - /data/storage:/app/storage

  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle      
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    restart: always

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle      
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']
    restart: always

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=EasyChatwoot

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis:/data/redis
    ports:
      - '127.0.0.1:6379:6379'

  webpack:
    <<: *base
    image: chatwoot-webpack:development
    profiles:
      - task
    volumes:
      - ./:/app:delegated
      - node_modules:/app/node_modules # Node modules shared across containers
      - packs:/app/public/packs
      - cache:/app/tmp/cache
      - bundle:/usr/local/bundle
    ports:
      - "3036:3035" # Webpack dev server
    environment:
      - NODE_ENV=development 
      - RAILS_ENV=production
      - NODE_OPTIONS=--openssl-legacy-provider
    entrypoint: docker/entrypoints/webpack.sh
    command: bin/webpack
volumes:
  postgres:      
  redis:
  packs:
  node_modules:
  cache:
  bundle: